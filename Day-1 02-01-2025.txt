FULL STACK TRAINING DAY-1&2 02/01/2025 & 03/01/2025 & 04/01/2025

opensource tools for deploying 
1.firebase----->multitasker,it has itself having a real time database
Advantages:
deplyement,authentication(gmail,otp),
2.netlify------------>drag and drop
3.git and GitHub---------->cloud storage
4.git-lab------->richer in UI
xenkin,scoobernet,
EC2-development purpose-->under AWS
5.bit-bucket


git
->it is a version controller
->used to keep track on a code.
->easy and simple to learn 

GitHub
->used to store and manage the code
->cloud storage


how to use GitHub:
install the git-bash--->nothing but command prompt
command: git --version
or
command prompt
or
vs code

___________________________________________________________________________________________________________________________

03/01/2025

->git is of 2 types they are

1.local repo:
 ---->2 parts
       1.un-tracked(unstaged) files
           >create
           >update
           >delete
       2.tracked files
           --->command to convert untracked to tracked is:
           git add filename(only one file contains)
             or
           git add .(all files are added at a time)(all files are not tracked) for this one more command
            or
           git commit-m""

2.cloud repo(git-hub):
  -->command for establishing communication b/w localrepo and github
     git remote add origin http-path
  -->command to push the tracked files(default branch created in repository that is main)(-u ---> upstream)
     git push -u origin master/main

command:
---> git init (stands for initialization)


____________________________________________________________________________________________________________________________


04/01/2025

Electron js is used to develop desktop application
react.js is used to develop web application

WHAT IS JAVASCRIPT?
It is used to convert static page into dynamic page

VARIABLES in javascript:
--->variables is a set of blocks used to store data
--->Variables are dynamic in nature(no need of mentioning the datatype)

VARIABLES HAVING SCOPE in js :
1.global(declare the variables outside the function and access the inside the function)
2.loacl-scope/script-scope
3.block scope(having {})

VARIBLES ARE DIVIDED INTO 3 TYPES:
1.var (comes under global scope)
2.let (comes under local scope)
3.const (comes under local scope)



DATATYPES:

primitive data types
1.number
2.string
3.boolean 
4.undefined
5.Null(type in js is object)
6.Delete

nonprimitive datatypes
1.class
2.object
3.array
4.function
5.maps
6.sets

--->end of the everything in javascript is treated as a javascript


___________________________________________________________________________________________________________________________________________

06/01/2025(Monday)

1.JavaScript:
---->1.Develop dynamic websites

1.Static websites --- remains same to every one
ex: fb login
2.Dynamic websites --- changes to every one(data)
ex: you-tube ,Criczbuzz ,Google maps 


Variables:

-->1.satic typed and dynamic type:
-->2.variable are used in every programming language
-->3.variables are used to store the data(any kind of data)
-->4.variables are case sensitive
-->5.variables we can start with letters,_,$
-->6.variables we can't start with numbers
-->7.Reserved words are not allowed
-->8.Allowed letters,_,$,numbers


How  to declare variables:
 >var
 >let
 >const

1)var keyword 1995-2015
2)let keyword 2015
3)var used only old browsers

1.Reassigning variables:

 ex:    var fav_std="sam"
        fav_std="kavya"
        fav_std="sri"                        o/p:sri
        document.write(fav_std);
        console.log(fav_std);

 ex:    var a=100;
        a=20;
        document.write(a+a);                o/p:40
        console.log(a+a);

-->reassigning variables is possible by var
-->reassigning with let also accepted
-->reassigning with const not accepted

1.Redeclaring with var is accepted:

example:
        var a=1:
        var a=5:
        document.write(a+a);      
        console.log(a+a);

2.Redeclaring with let is not accepted:

example:
       let a=1:
       let a=5:
       document.write(a+a);         o/p:error
       console.log(a+a);

3.reassigning with const not accepted:


Block Scope:

Variables declared with var does not have blockscope

example:
    var a="sai";
        {
            var a="kumar";
            console.log(a);
        }
        console.log(a);

example:
      
      let a = "sai";
      {
        let a = "kumar";
        console.log(a);
        console.log(a);
      }
      console.log(a);
__________________________________________________________________________________________________________________________________
07/01/2025

Data Types:
1)Dynamic type languages
Two types:
1.Primitive data types
2.Non-primitive datatypes: Objects, Arrays

---->TO CHECK THE DATATYPE - typeOf

1.PRIMITIVE DATATYPES: predefined ; we can store single values
  1.Numbers:integers,floats
  2.String:Stream of characters enclosed in quotes
   ---single,double,backtick quotes;
  3.Boolean : true or false
  4.Null :empty value or no value
example:
      let a = null;
      document.write(a, "<br>");
      document.write(typeOf(a));
  5.Undefined :---declared variable with no value


 1.Numbers:
ex:1,-1,-4.4,5.5

 2.String:Stream of characters enclosed in quotes
 --single,double,backtick quotes;
Single and Double quotes works same
---Back Ticks introduced in ES6 version
---it provides

ex:for backticks
        let a=1
        console.log("hi +a+a")                            o/p:hi+a         chrome:
        document.write('hi+ a+a' ,"<br>")                  hi +2            hi+ a+a
        document.write(`hi+ ${a+a}`)                       hi +a+a          hi+ 2
        console.log(`hi +${a+a}`)                          hi +2

string concatenation:

example:
  a=sai
  b=kumar
  age=30
  let c=

o/p: i am sai kumar, my age is 30 years old
program:
      let a = "sai";
      let b = "kumar";
      let age = 30;
      console.log(`I am ${a + " " + b},my age is ${age} is years old`);

Example: Reactjs student = sai kumar
      let a = "Reactjs";
      let b = "sai kumar";
      console.log(`${a + "=" + b}`);

1.python,java,c,c++
1.Data structures

#leetcode
#hackerrank
#codechef
#written test in mncs
#Technical interviews
#Conditional statements:only once  #1-10
#loops:
#functions:
#oops




console(35>=35)  #
(35>=30 or (30<=36)   #TorF -- T
(35>=30 and (30<=36)  #TorF -- T
(35>=30 and (36<=36)  #TorF -- T
(35>=30 and (39<=36)  #TorF -- 

(36>=39)


or
  
T or F = T
F or T = T
F or F = F
T or T = T
T and T = T


CONDITION:
-->An expression that evaluates either (true or false).
console.log(5>4);

CONDITIONAL STATEMENT:
-->To make the set of instructions execute only when the given condition is true.

Block of code(conditional block):set of instructions.
-->When this block of code will execute it will execute when the specific condition is true.

INDENTATION:{ inside  the braces that is conditional block
                        }

if :   #only one possible conditions
elseif  :   #more than one
else  :   #
 
_________________________________________________________________________________________________________________________

08/01/2025

JavaScript Operations:

1.Arithmetic Operators:
+,-,*
Multiplication          - *
Division                - /  (Q)
Modulus Operator        - %  (R)
Exponential(raised to the power  - **
++ ,
--


example:
      let a = 5;
      let b = 2;
      document.write(a * b, "<br>");       o/p:10
      document.write(a ** b, "<br>");          25
      document.write(a / b, "<br>");           2.5
      document.write(a % b);                   1

2.Assignment Operator:

 var student = "swetha"
+=
-+
/+
%=

3.Logical Operators:

and  =  &&
T and T  = T
or   = ||
T or F  = F
not    = !

4.Relational(Comparison Operators) values:

<,>,>=,<=,==,===,!=,!===



5.Conditional Operator;Ternary operator  (?)

First evaluates an expression



6.windows method

alert()
prompt()
confirm()
______________________________________________________________________________________________________________________________________________

09/01/2025

Coditional Statements:

-->To make the set of instructions(block of code)(coditional block)execute only when the given condition condition is true.
-->used to decide whether the code has to be executed or skip based on the given condition
-->line-line(sequence)

Block Of Code :set of instructions
-->it will execute only when that specific condition is true

Condition :An expression that evaluates an result(True or False)
Ex:console.log(5>6)

Methods:

if 
if-else
else if
switch
Ternary Operator

if :

only one possible condition
->if the condition is True it will execute other wise it skip

Syntax:
if(condition){
---block of code
}

Example: condition is True
      let a = 5;
      let b = 10;
      //5<10    #T
      if (a < b) {
        document.write("hi vidya", "<br>");                        o/p:hi vidya
      }                                                                welcome to india
      document.write("welcome to india");
      //out of block

Example: Condition is false
      let a = 5;
      let b = 10;
      //5>10    #F
      if (a > b) {
        document.write("hi vidya", "<br>");                        o/p:welcome to india
      }                                                                
      document.write("welcome to india");
      //out of block


if-else:

example:

//if else condition when condition is true
      let a = 5;
      let b = 10;
      //5>10    #T
      if (a > b) {
        document.write("hi vidya", "<br>");                       o/p:srividya
      } else {                                                    welcome to india
        document.write("srividya", "<br>");
      }
      document.write("welcome to india");
      //out of block


else-if:

example:

      age = prompt("enter your age?");
      name = prompt("enter your name?");
      if (age < 18) {
        alert(name + "you are too young too marry");              o/p:enter your age:20
      } else if (age > 35) {                                          enter your name:srividya
        alert(name + "your are too old to marry");                    srividya perfect age to marry
      } else {                                                        welcome to india
        alert(name + " perfect age to marry ");
      }

      alert("welcome to india");


Exampple program:

//Example program:

      let a = prompt("score of player 1");
      let b = prompt("score of player 2");
      if ((a > 300 || b > 300) && a + b < 500) {           o/p:score of player1:300
        alert("can teamup");                                   score of player2:200
      } else {                                                 cannot teamup
        alert("cannnot teamup");
      }
_________________________________________________________________________________________________________________________________________________________

10/01/2025


Program Solcing eith JavaScript

1.Write a program to check whether the number is divisible by 2 and 3 and both(take prompt).

Program:

      let number = parseInt(prompt("enter the value"));
      if (number % 2 == 0 && number % 3 == 0) {
        document.write("number is divible by 2 and 3");              o/p:6
      } else {                                                           number is divisible by 2 and 3
        document.write("it is not divisible");
      }
      

2.write a program to find the largest number out of three numbers expected from the user.

Program:
      a = prompt("enetr the first value");  or  ... a = parseInt(prompt("enetr the first value")); 
      b = prompt("enter the second value");
      c = prompt("enter the third value");                           o/p:100
      if (a >= b && a >= c) {                                            500
        largest = a;                                                     129
      } else if (b >= a && b >= c) {                                     the greater valie is 500                                
        largest = b;
      } else {
        largest = c;
      }
      document.write("the greater value is" + largest);

3.Accept the following from the user and calculate the percentage of classes attended
  a.Total number of working days
  b.Total number of days for absent
After calculating percentage show that, if the percentage is less than 75 then student will not be eligible to write exam

Program:

      a = prompt("Total number of working days");
      b = prompt("Total number of days absent");
      c = a - b;                                                  o/p:Total no of working days :100
      d = (c / a) * 100;                                              Total no of days absent :15
      if (d > 75) {                                                   eligible to write exam
        document.write("eligible to write exam");
      } else {
        document.write("not eligible");
      }
      

4.A company decided to give bonus to employee according to the following criteria:



switch 
if
else
else if
 synatx:
  switch(varaiable/expression){
case value 1:
//block of code for case 1
break;
case value 2:
//block of code for case 2
break;
case value 2:
//block of code for case 3
break;
default;
//block of code

___________________________________________________________________________________________________________

20/01/2025

LOOPS:

Conditional statements:

--block of code
1-10 numbers
Loops:Block of code several times
1-10
#10 times

1)for loop :
2)for in
3)for of
4)while
5)do while


1)for loop:
For(initialisation, condition,update expression{
--block of code
}

initialisation place where loop start(init)

1-5
  #i<5 or i<=5
  for(let i=1; i<=5;i++){ 
   console.log(i)
  }
  i=1,2,3
  1<=5 #T 2<=5,3<=5
  i++=i  #1+1=2 ; 2+1=3
  Block of code #1;2;3;4;5

example:
  for(let i=0;i<7;i=i+2){
   console.log(i+2)
  }
 #i=0;2;4;6;8
 #c=0<7;2<7;4<7;6<7;8<7=F
 #updation=2+2=4;4+2=6;6+2=8
 #B=0+2=2;2+2=4;4+2=6;6+2=8

example:
 #10-15
 #srividya  #5
 #squares   -1-10
 #1 4 9 16 25----100
 #9th table

 for(i=10;i<=15:i++){
  console.log(i);
 }
 
______________________________________________________________________________________________________________

21/01/2025

forin:

const a="ramya"
for(let i in a){
console.log(a[i]);
}

----->While loop:

--for loop
--infinite(unknown)
syntax:
while(condition){
block of code
}

1.cond inside the()
2.{}
3.false #

ex:1-5

let i=1,n=5;
///while loop 1-5
while(i<=n){
//1<=n  ;2<=5
console.log(i+1)   #block of code will execute
i=i+2  #updation  #1+1=2 o/p:2 4 6 8
}

example:

let i = 2;
      n = 8;
      ///while loop 1-5
      while (i <= n) {
        //2<=8;4<=8;6<=8;8<=810<=8
        console.log(i + 1); //block of code will execute
        //2+1=3 ;4+1=5;6+1=7                                 o/p:3 5 7 9 
        i = i + 2; //updation
        //2+2=4;4+2=6;6+2=8;8+2=10
      }


----->do-while:

syntax:
do{
//block of code
}while(condition)

#false even it execute once

example:
let c=0;
do{
console.log("count is:"+c);
c++
}while(c<5);

o/p:
count is:0
count is:1
count is:2
count is:3
count is:4

----->Break,Cointinue

Matches it will stop
example:
for(let i=1;i<=8;i=i+2){                  o/p:1 3 
if(i>=4){
break;
}console.log(i)
}

#i=1;3;5
#up=1+2=3;3+2=5
#c=1<=8;3<=8;5<=8
#block of code :1;3

---->continue

matches to the condition only that value get skip and remaining value get continued


example:
for(let i=1;i<=8;i=i+2){                  o/p:1 3 
if(i>=4){
continue;
}console.log(i)
}


















